{"version":3,"file":"static/js/141.c0a8ec75.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.jsx","components/MovieListItem/MovieListItem.styled.jsx","components/MovieListItem/MovieListItem.jsx","components/MovieList/MovieList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MovieContainer = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  padding-right: 100px;\n  padding-left: 100px;\n  margin-left: -30px;\n`;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  outline: none;\n  text-decoration: none;\n`;\n\nexport const Item = styled.li`\n  flex-basis: calc ((100% - 4 * 30px) / 4);\n  margin-left: 30px;\n  margin-bottom: 30px;\n  border-radius: 10px;\n  overflow: hidden;\n  border-radius: 4px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  &:hover {\n    transform: scale(1.03);\n    cursor: pointer;\n    box-shadow: 10px 11px 10px -4px rgba(0, 0, 0, 0.48);\n    -webkit-box-shadow: 10px 11px 10px -4px rgba(0, 0, 0, 0.48);\n    -moz-box-shadow: 10px 11px 10px -4px rgba(0, 0, 0, 0.48);\n  }\n`;\n\nexport const Image = styled.img`\n  width: 360px;\n  height: 450px;\n  object-fit: cover;\n  transition: all 600ms cubic-bezier(0.4, 0, 0.2, 1);\n  border-radius: 4px;\n  &:hover {\n    transform: scale(1.02);\n    cursor: pointer;\n  }\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  padding: 8px;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nexport const Title = styled.p`\n  color: black;\n  font-size: 12px;\n  font-weight: 700;\n`;\n\nexport const Vote = styled.p`\n  color: black;\n  font-size: 15px;\n  font-weight: 700;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport {\n  Item,\n  Image,\n  Info,\n  Title,\n  Vote,\n  StyledLink,\n} from './MovieListItem.styled';\n\nconst MovieItem = ({ id, src, title, vote }) => {\n  const imageBaseUrl = `https://image.tmdb.org/t/p/w500`;\n  const movieLink = `/movies/${id}`;\n  const location = useLocation();\n\n  return (\n    <StyledLink\n      to={movieLink}\n      state={{\n        from: location.pathname + location.search,\n      }}\n    >\n      <Item>\n        <Image src={imageBaseUrl + src} alt={title} />\n        <Info>\n          <Title>{title.toUpperCase()}</Title>\n          <Vote>⭐️{vote}</Vote>\n        </Info>\n      </Item>\n    </StyledLink>\n  );\n};\nexport default MovieItem;\n\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  src: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  vote: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { MovieContainer } from './MovieList.styled';\nimport MovieItem from 'components/MovieListItem/MovieListItem';\n\nconst MovieList = ({ movies }) => {\n  return (\n    <MovieContainer>\n      {movies.map(({ id, title, poster_path, vote_average }) => {\n        return (\n          <MovieItem\n            key={id}\n            id={id}\n            src={poster_path}\n            title={title}\n            vote={vote_average}\n          >\n            {title}\n          </MovieItem>\n        );\n      })}\n    </MovieContainer>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n      vote_average: PropTypes.number,\n    }).isRequired\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 30px;\n`;\n\nexport const Title = styled.p`\n  margin-right: 30px;\n  font-family: 'Metal Mania', cursive;\n  font-size: 40px;\n  &:hover {\n    color: oranged;\n  }\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 300px;\n  background-color: #fff;\n  overflow: hidden;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 40px;\n  height: 20px;\n  margin-right: 10px;\n  border: 0;\n  background-color: transparent;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    background-color: oranged;\n  }\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 300px;\n  height: 30px;\n  border-top: 0;\n  border-left: 0;\n  border-right: 0;\n  border-width: 3px;\n  border-image: linear-gradient(to right, orange, black, orange);\n  border-image-slice: 2;\n  background: transparent;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const Error = styled.h2`\n  text-align: center;\n  margin-top: 100px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport MovieList from 'components/MovieList';\nimport {\n  Container,\n  Title,\n  SearchForm,\n  Button,\n  Input,\n  Error,\n} from './Movies.styled';\nimport { BsSearch } from 'react-icons/bs';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport { startLoader, stopLoader } from 'components/Loader';\nimport { getMoviesByName } from 'services/api';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    if (searchParams.get('searchQuery') === null) {\n      return;\n    }\n    const userQuery = searchParams.get('searchQuery');\n    setStatus('pending');\n    getMoviesByName(userQuery)\n      .then(response => {\n        if (response.results.length === 0) {\n          Report.failure(\n            'Search Failure',\n            'There is no movie for your query. Please enter other query',\n            'Ok'\n          );\n          return;\n        }\n        setMovies(response.results);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setStatus('rejected');\n        console.log(error);\n      })\n      .finally(() => {\n        stopLoader();\n      });\n  }, [searchParams, query]);\n\n  const handleNameChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      Report.failure('Search Failure', 'Please enter seach query', 'Ok');\n      return;\n    }\n\n    setSearchParams({ searchQuery: query });\n    setQuery('');\n  };\n\n  return (\n    <div>\n      <Container>\n        <Title>Search movie by name</Title>\n        <SearchForm onSubmit={handleSubmit}>\n          <Input\n            type=\"text\"\n            autocomplete=\"off\"\n            placeholder=\"Enter your query\"\n            name=\"searchQuery\"\n            value={query}\n            onChange={handleNameChange}\n          />\n          <Button type=\"submit\">\n            <BsSearch size={23} />\n          </Button>\n        </SearchForm>\n      </Container>\n\n      {status === 'pending' && startLoader()}\n      {status === 'resolved' && <MovieList movies={movies} />}\n      {status === 'rejected' && (\n        <Error>Ups...💩 Something went wrong. Please try again later.</Error>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '250f014fd6a936550e378176122f5d39';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function getTrendingMovies() {\n  try {\n    const url = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&language=en-US&page=1`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport async function getMoviesByName(searchQuery) {\n  try {\n    const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}&include_adult=false&language=en-US&page=1`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport async function getMoviesDetails(id) {\n  try {\n    const url = `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport async function getMovieCredits(id) {\n  try {\n    const url = `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport async function getMovieReview(id) {\n  try {\n    const url = `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};"],"names":["MovieContainer","styled","StyledLink","Link","Item","Image","Info","Title","Vote","id","src","title","vote","movieLink","location","useLocation","to","state","from","pathname","search","alt","toUpperCase","movies","map","poster_path","vote_average","Container","SearchForm","Button","Input","Error","useState","query","setQuery","setMovies","status","setStatus","useSearchParams","searchParams","setSearchParams","useEffect","get","userQuery","getMoviesByName","then","response","results","length","Report","catch","error","console","log","finally","stopLoader","onSubmit","e","preventDefault","trim","searchQuery","type","autocomplete","placeholder","name","value","onChange","currentTarget","toLowerCase","size","startLoader","MovieList","API_KEY","BASE_URL","getTrendingMovies","url","axios","data","getMoviesDetails","getMovieCredits","getMovieReview"],"sourceRoot":""}